name: build hydraplay release file

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Get latest tag
        id: vars
        #run: echo ::set-output name=tag::${GITHUB_REF:10}
        run: echo tag=${GITHUB_REF:10} >> $GITHUB_OUTPUT
      - name: checkout hydraplay
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: build hydraplay web fronend
        run: |
          npm install -g @angular/cli
          cd src/ui
          npm i
          ng build
          cd
      - name: get and build snapweb
        run: |
          wget -O snapweb-0.2.0.zip https://github.com/badaix/snapweb/archive/refs/tags/v0.2.0.zip
          unzip snapweb-0.2.0.zip
          echo "let config = {
              baseUrl: (window.location.protocol === 'https:' ? 'wss://' : 'ws://') + window.location.hostname + ':1780'
           }" > snapweb-0.2.0/page/config.ts
          npm install -g typescript@4.3 
          cd snapweb-0.2.0
          make dist
          mv dist ../src/hydraplay/server/static/snapweb
          cd ..
          rm snapweb-0.2.0.zip
          rm -R snapweb-0.2.0
      - name: zip dist
        run: zip -r hydraplay-${{ steps.vars.outputs.tag }}.zip . -x "doc/*" "snapweb/*" "src/ui/*" ".git/*" "docker/*" "src/extras/*" ".github/*" ".gitignore" "docker-compose.inst-dev.yml" "docker-compose.ui-dev.yml"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hydraplay-${{ steps.vars.outputs.tag }}.zip
          asset_name: hydraplay-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip

      - name: Trigger Docker image build workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: build-docker-image
          client-payload: '{"tag": "${{ steps.vars.outputs.tag }}"}'